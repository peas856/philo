memset, printf, malloc, free, write,
usleep, gettimeofday, pthread_create,
pthread_detach, pthread_join, pthread_mutex_init,
pthread_mutex_destroy, pthread_mutex_lock,
pthread_mutex_unlock

https://github.com/Glagan/42-Philosophers/blob/master/philo_one/philosophers.h

철학자수는 이번에 업데이트되면서 1명이 들어왔을때 반드시 죽어야한다는 항목이 생겼어요 평가표에도 있었습니당
네넵 입력받은 time to die 가 지나면 사망하도록 하면 될거같아요~~!

• As spaghetti is difficult to serve and eat with a single fork, it is assumed that a
philosopher must eat with two forks, one for each hand
• Each time a philosopher has finished eating, he will drop his forks and start sleeping.
• When a philosopher is done sleeping, he will start thinking

time_to_die: is in milliseconds, if a philosopher doesn’t start eating ’time_to_die’
milliseconds after starting his last meal or the beginning of the simulation, it
dies

philo
philo/
number_of_philosophers time_to_die time_to_eat time_to_sleep[number_of_times_each_philosopher_must_eat]


테스트 평가
Test
./program 5 800 200 200 7 : 7번 다 먹으면 프로그램 종료
./program 4 410 200 200 : 무한 루프
./program 2 310 200 100 (10ms 안에 죽는 것 확인)
1 800 200 200 die


1. 기본 개념 정리

2. philo one 동작 구조 짜보기, 코드로 구현, 다른 코드 참고, 테스터 돌려보기 

함수 원형
void* memset(void* ptr, int value, size_t num);

첫번째 인자 void* ptr은 세팅하고자 하는 메모리의 시작 주소.
즉, 그 주소를 가리키고 있는 포인터가 위치하는 자리 입니다.

두번째 인자 value는 메모리에 세팅하고자 하는 값을 집어 넣으면 됩니다.
int 타입으로 받지만 내부에서는 unsigned char 로 변환되어서 저장됩니다. 즉 'a' 이런것을 넣어도 무방하다는 뜻입니다.

세번째 인자 size_t num은 길이를 뜻합니다. 이 길이는 바이트 단위로써 메모리의 크기 한조각 단위의 길이를 말합니다. 이는 보통 "길이 * sizeof(데이터타입)" 의 형태로 작성하면 됩니다.

반환값은 성공하면 첫번째 인자로 들어간 ptr을 반환하고, 실패한다면 NULL을 반환합니다.

 
아 그리고, 헤더파일은 memory.h 혹은 string.h 둘중 하나를 사용해도 무방합니다. 두개다 memset 함수가 정의되어있기 때문입니다. (둘다 써도 괜찮아요)

아래 예제로 들어가기 전에 간단하게 예제를 한번 작성해보겠습니다.
char arr[] = "blockdmask";
memset(arr, 'c', 5 * sizeof(char));
print(arr);



출처: https://blockdmask.tistory.com/441 [개발자 지망생]