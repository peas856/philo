memset, printf, malloc, free, write,
usleep, gettimeofday, pthread_create,
pthread_detach, pthread_join, pthread_mutex_init,
pthread_mutex_destroy, pthread_mutex_lock,
pthread_mutex_unlock

philo
philo/
number_of_philosophers time_to_die time_to_eat
time_to_sleep [number_of_times_each_philosopher_must_eat]

• One fork between each philosopher, therefore if they are multiple philosophers, there
will be a fork at the right and the left of each philosopher.
• To avoid philosophers duplicating forks, you should protect the forks state with a
mutex for each of them.
• Each philosopher should be a thread.


테스트 평가
Test
./program 5 800 200 200 7 : 7번 다 먹으면 프로그램 종료
./program 4 410 200 200 : 무한 루프
./program 2 310 200 100 (10ms 안에 죽는 것 확인)


1. 기본 개념 정리

2. philo one 동작 구조 짜보기, 코드로 구현, 다른 코드 참고, 테스터 돌려보기 